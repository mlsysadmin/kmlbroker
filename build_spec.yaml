version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  variables:
    namespace: "kmlbroker"

  exportedVariables:
    - BUILDRUN_HASH

steps:

  - type: Command
    name: "Install kubectl"
    timeoutInSeconds: 60
    command: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      mv kubectl /usr/local/bin/

  - type: Command
    name: "Create Docker Registry Secret"
    timeoutInSeconds: 60
    command: |
      kubectl create secret docker-registry kmlbroker \
        --docker-server=nrt.ocir.io \
        --docker-username="nr7audjfcmkp/OracleIdentityCloudService/kate.ceballos@mlhuillier.com" \
        --docker-password="<rc2K[obBEi_l0+WhQ>R" \
        --docker-email=kate.ceballos@mlhuillier.com -n kmlbroker

  - type: Command
    name: "Create TLS Secret"
    timeoutInSeconds: 60
    command: |
      cd .comSSL
      kubectl create secret tls com-tls --cert=combine-com.crt --key=dprivate.pem -n kmlbroker
      cd ..

  - type: Command
    name: "Define Tagging"
    timeoutInSeconds: 60
    command: |
      export BUILDRUN_HASH=$(echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7)
      echo "BUILDRUN_HASH: " $BUILDRUN_HASH

    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 1200
        runAs: root

  - type: Command
    name: "Build container image"
    timeoutInSeconds: 6000
    runAs: root
    command: |
      cd frontend
      docker build --pull --rm -t kmlbroker:${BUILDRUN_HASH} .
      cd ..

      cd backend
      docker build --pull --rm -t kmlbrokerbe:${BUILDRUN_HASH} .
      cd ..

outputArtifacts:
  - name: frontendImage
    type: DOCKER_IMAGE
    location: kmlbroker:${BUILDRUN_HASH}
  - name: backendImage
    type: DOCKER_IMAGE
    location: kmlbrokerbe:${BUILDRUN_HASH}
