version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  variables:

  exportedVariables:
   - BUILDRUN_HASH
   - kmlbroker

steps:
  - type: Command
    name: "Install Prereqs"
    timeoutInSeconds: 600
    command: |
      cd ${OCI_WORKSPACE_DIR}/node_express
      # Install nvm
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
      nvm install lts/erbium
      echo "NODE VERSION: $(node -v)"
      echo "NPM VERSION: $(npm -v)"

    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 40
        runAs: root
        
  - type: Command
    name: "Define Tagging"
    timeoutInSeconds: 60
    command: |
      export BUILDRUN_HASH=$(echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7)
      echo "BUILDRUN_HASH: " $BUILDRUN_HASH

    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 1200
        runAs: root

  - type: Command
    name: "Build container image"
    timeoutInSeconds: 6000
    runAs: root
    command: |
      cd frontend
      docker build --pull --rm -t kmlbroker:${BUILDRUN_HASH} .
      cd ..

      cd backend
      docker build --pull --rm -t kmlbrokerbe:${BUILDRUN_HASH} .
      cd ..

outputArtifacts:
  - name: frontendImage
    type: DOCKER_IMAGE
    location: kmlbroker:${BUILDRUN_HASH}
  - name: backendImage
    type: DOCKER_IMAGE
    location: kmlbrokerbe:${BUILDRUN_HASH}